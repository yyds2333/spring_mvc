<?xml version="1.0" encoding="UTF-8"?>
<!-- 上面是版本信息头文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!-- 通过加载配置文件实现数据库连接 -->
    <bean id="propertyPlaceholderHelper" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:db.properties"/>
    </bean>

    <!-- 配置数据源文件，创建dbcp数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置Mybatis的SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- configLocation可以加载Mybatis的配置文件，一般不需要-->
        <!--<property name="configLocation" ref="classpath:mybatis-config.xml"/>-->
        <!-- 用来加载映射文件，*.xml是通配符，统配mappers下的所有xml文件-->
        <property name="configuration">
            <!-- 配置开启驼峰映射 -->
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <property name="typeAliasesPackage" value="com.powernode.entity"/>
    </bean>





    <!-- 扫描mapper接口所在包名，Spring会自动代理生成其下的接口实现类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.powernode.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 事务管理器，用于事务通知  -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true" timeout="15"/>
            <tx:method name="delete*" propagation="REQUIRED" timeout="15"/>
            <tx:method name="update*" propagation="REQUIRED" timeout="15"/>
            <tx:method name="add*" propagation="REQUIRED" timeout="15"/>
        </tx:attributes>
    </tx:advice>

    <!-- 事务切面 -->
    <aop:config>
        <!-- execution中是方法的全限定名 *.* 代表统配所有方法，(..)代表统配参数个数0~∞ -->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(public * com.powernode.service..*.*(..))"/>
    </aop:config>
    <!-- 配置SqlSessionTemolate对象
    <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg type="org.apache.ibatis.session.SqlSessionFactory" ref="sessionFactoryBean"/>
    </bean>-->

    <!-- 使用MapperFactoryBean配置单个Mapper对象
    <bean id="materialMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.powernode.mapper.xxMapper"/>
        <property name="sqlSessionTemplate" ref="sessionTemplate"/>
    </bean>-->
    <!-- 使用MapperScannerConfigurer配置多个Mapper对象 -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.powernode.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryBean"/>
    </bean>-->


</beans>